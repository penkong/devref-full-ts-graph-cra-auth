# proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

# upstream kibana {
#   server kibana:5601;
# }

server {
  listen 80 default_server;

  server_name localhost;

  error_log /var/log/nginx/localhost.error_log info;

  # where the root here
  root /var/www;
  # what file to server as index
  # index index.html index.htm;

  # location / {
  #   root /usr/share/nginx/html;
  #   index index.html index.htm;
  #   try_files $uri $uri/  =404;
  # }
  
  # location / {
  #   proxy_pass http://webcra:3000;
  #   proxy_http_version 1.1;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection 'upgrade';
  #   proxy_set_header Host $host;
  #   proxy_cache_bypass $http_upgrade;
  # }

  # location / {
  #   # First attempt to serve request as file, then
  #   # as directory, then fall back to redirecting to index.html
  #   try_files $uri $uri/ /index.html;
  #   # proxy_set_header X-Real-IP $remote_addr;
  #   # provide us a list containing the ip addresses that every server the clinet
  #   # has been proxied through
  #   # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   # proxy_set_header X-NginX-Proxy true;
  #   # proxy_set_header Host $http_host;
  #   # proxy_set_header X-Forwarded-Proto http;
  #   # proxy_set_header X-Forwarded-Proto $scheme;
  #   # proxy_pass http://webcra;
  #   proxy_redirect off;
  # }

  # Media: images, icons, video, audio, HTC
  # location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
  #   expires 1M;
  #   access_log off;
  #   add_header Cache-Control "public";
  # }

  # # Javascript and CSS files
  # location ~* \.(?:css|js)$ {
  #     try_files $uri =404;
  #     expires 1y;
  #     access_log off;
  #     add_header Cache-Control "public";
  # }

  # # Any route containing a file extension (e.g. /devicesfile.js)
  # location ~ ^.+\..+$ {
  #     try_files $uri =404;
  # }

  location /graphql {
    proxy_set_header X-Real-IP $remote_addr;
    # provide us a list containing the ip addresses that every server the clinet
    # has been proxied through
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Host $http_host;
    # proxy_set_header X-Forwarded-Proto http;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://apilist:5002/graphql;
    proxy_redirect off;
  }

  # location /__info__/kibana {
    
  #   proxy_http_version 1.1;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection 'upgrade';
  #   proxy_set_header Host $host;
  #   proxy_cache_bypass $http_upgrade;
    
  #   proxy_pass http://kibana;
  #   proxy_redirect off;
  #   rewrite ^/__info__/kibana/(.*)$ /$1 break;
  # }


  # location /__info__/elasticsearch/ {
  #   # auth_basic "Restricted Access";
  #   # auth_basic_user_file /etc/nginx/htpasswd.users;
  #   proxy_http_version 1.1;
  #   # proxy_set_header Host $host;
  #   proxy_set_header Connection "Keep-Alive";
  #   proxy_set_header Proxy-Connection "Keep-Alive";
  #   proxy_pass http://elasticsearch:9200/;
  #   proxy_redirect off;
  #   proxy_buffering off;
  # }

  # location /__info__/portainer/ {
  #   proxy_http_version 1.1;
  #   proxy_set_header Host $host;
  #   proxy_set_header Connection "";
  #   proxy_pass http://portainer:9000/;
  # }

  # location /__info__/portainer/api/websocket/ {
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection "upgrade";
  #   proxy_http_version 1.1;
  #   proxy_pass http://portainer:9000/api/websocket/;
  # }
  
  # location /__info__/redis/ {
  #   proxy_http_version 1.1;
  #   # proxy_set_header Host $host;
  #   # proxy_set_header Connection "";
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_pass http://redis-commander:8083/;
  # }

  location  /__info__/mongo-express {
    proxy_set_header Host	$host;
		proxy_set_header X-Real_IP	$remote_addr;
    proxy_pass http://mongo-express:8081;
  }
}