
version: '3.4'
services:

  nginx:
    image: 'nginx:stable-alpine'
    ports: 
      - 80:80
      - 443:443
    tty: true
    depends_on: 
      - webcra
      - apilist
      # - redis
      - mongodb
      # - redis-commander
      - mongo-express
      # - portainer
      # - kibana
      # - logstash
      # - elasticsearch
    volumes: 
      # remember!!!!!!! add trust proxy to nodejs services
      - ../../app/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro #read only 

  # elasticsearch:
  #   build:
  #     context: ../monitor/elasticsearch
  #   volumes:
  #     - type: bind
  #       source: ../monitor/elasticsearch/config/elasticsearch.yml
  #       target: /usr/share/elasticsearch/config/elasticsearch.yml
  #       read_only: true
  #     - type: volume
  #       source: elsasticvol
  #       target: /usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"

  # logstash:
  #   build:
  #     context: ../monitor/logstash/
  #   volumes:
  #     - type: bind
  #       source: ../monitor/logstash/config/logstash.yml
  #       target: /usr/share/logstash/config/logstash.yml
  #       read_only: true
  #     - type: bind
  #       source: ../monitor/logstash/pipe
  #       target: /usr/share/logstash/pipeline
  #       read_only: true
  #   ports:
  #     - "5044:5044"
  #     - "5000:5000/tcp"
  #     - "5000:5000/udp"
  #     - "9600:9600"
  #   depends_on:
  #     - elasticsearch

  # kibana:
  #   build:
  #     context: ../monitor/kibana/
  #   volumes:
  #     - type: bind
  #       source: ../monitor/kibana/config/kibana.yml
  #       target: /usr/share/kibana/config/kibana.yml
  #       read_only: true
  #     - type: volume
  #       source: logs
  #       target: /var/log
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  #   cap_add:
  #     - ALL

  # portainer:
  #   image: portainer/portainer-ce
  #   restart: always
  #   volumes:
  #     - portainer_data:/data
  #     - /var/run/docker.sock:/var/run/docker.sock 

  # redis:
  #   image: "redis:6.2.2-alpine"
  #   restart: always
  #   volumes:
  #     - redisvol:/var/lib/redis
  
  # redis-commander:
  #   image: "rediscommander/redis-commander:latest"
  #   restart: always
  #   depends_on: 
  #     - redis

  mongodb:
    image: mongo
    restart: always
    volumes:
      - ../../app/services/list/db/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongovol:/data/db

  mongo-express:
    image: mongo-express
    restart: always 
    depends_on:
      - mongodb

  apilist:
    build: 
      context: ../../app/services/list
    restart: always
    depends_on:
      - mongodb
      # - redis

  webcra: 
    build:
      context: ../../app/web
    restart: always
    depends_on: 
      - apilist
  


volumes:
  mongovol:
    driver: local
  # portainer_data:
  #   driver: local
  # redisvol:
  #   driver: local
  # elsasticvol:
  #   driver: local
  # logs:
  #   driver: local